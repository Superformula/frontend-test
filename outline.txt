Completed 
  Installed necessary dependencies for typescript/react/webpack to render compiled code to page 
  Create models to represent data received from API
  Create dummy data from models to render
  Render dummy data to page
  Make basic filtering drop down menu
  Format RestaurantItem
  Make Restaurants populate in a grid for RestaurantList
  Format Filtering
  Connect state with Redux
  Make stateful filtering functional
  Manage any additional state
    Load more under the grid needs to produce more restaurants when clicked
  Setup Router to reviews page 
  Format reviews page
  Make GraphQL server
  Pull data from Yelp API 
  Implement Apollo
  Send Yelp data to client
    Map over Yelp data and render to page
    Refactor models to better optimize Queries
      Decouple Reviews from Restaurants 
    Optimize server side filtering/Queries
      Apollo cache
      Only request necessary information on home page for faster loads
  Dynmically load categories from home page Query
  Render stars as react component
  Account for multiple categories on one Restaurant
  Reviews added back to restaurant class for rendering -- see Roadblock section
  Add map to reviews page
  Styling -- SASS available
    Color Map Marker if possible
    Fix image width && height
    Initial render must have 4 restaurants per row
    Make clear all button disabled when no filters are active
    Color Scheme
    Make dropdown hover over content
    Get rid of Li bullet points
    Make dropdown 80 pixels with margin
    Color disabled button outline 
    Align dropdown with margin
    Add underlines to boxes in dropdown
    Add dividers
      Color filter box border outline --bottom
    Justify buttons over center of grid
    Adjust fonts and sizing

Todo
    Style Reviews Page
  Separate client/server folders and dependencies
    Update necessary paths
    Clean up dependencies
  Heroku Deploy
  Unit Tests
  More Tests - Use Storybook https://storybook.js.org/
    Change all divs to Fragments for more performance
    Convert functions to arrow syntax
  Make Responsive -- Web-Mobile
  Documentation -- Include Conclusion with optimizations

Extra
  Flutter native mobile version
  Refactor server code to typescript
  Persist data to backend (favorite restaurants)
  More Styling -- add Animations

Roadblocks
  Query only necessary information on reviews page
    Removing reviews from initial query decreases latency by 1.0s on average however,
    in order to query graphQL separately, the restaurant ID of the clicked restaurant
    needs to be passed from the client to the server in order to make queries for reviews
    of that specific restaurant. No clear method has been identified to successfully decouple
    the restaurant ID from the client and dynmically send it to the server. Current solution
    works with query that requests all data on intial page render, but comes at a performance 
    cost of about 1.0s of loading on intial render.
  Solution
    - Configure graphQL endpoint to do a post request from client with ID of restaurant on req.body
    and congure new post request to Yelp API endpiont within graphql Route
    - Switch from graphQL to express for routes and handle logic to post to Yelp GraphQL endpoint after 
    the id is received on server from client. Send final queried data back as response to client.
